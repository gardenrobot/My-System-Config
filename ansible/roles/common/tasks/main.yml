- name: remove folders
  file:
    path: "{{ item }}"
    state: absent
  with_items:
  - Documents
  - Music
  - Pictures
  - Public
  - Templates
  - Videos

- name: generate ssh keys
  command: ssh-keygen -f "{{item.private}}" -N ''
  args:
    creates: "{{item.private}}"
  with_items:
    - "{{ssh_keys_personal}}"
    - "{{ssh_keys_work}}"

- name: link ssh keys
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  with_items:
  - { src: "{{ssh_keys_personal.private}}", dest: "{{ssh_keys.private}}" }
  - { src: "{{ssh_keys_personal.public}}",  dest: "{{ssh_keys.public}}" }

- name: add syncthing pgp key
  shell: curl -s https://syncthing.net/release-key.txt | sudo apt-key add -
  become: yes
  become_method: sudo

- name: add syncthing apt source
  shell: echo deb https://apt.syncthing.net/ syncthing stable > /etc/apt/sources.list.d/syncthing.list
  become: yes
  become_method: sudo

- name: upgrade packages
  apt:
    upgrade: dist
    update_cache: yes
  become: yes
  become_method: sudo

- name: install packages
  apt:
    name: "{{installed_packages}}"
    state: present
  become: yes
  become_method: sudo

- name: clone repos
  git:
    repo: "{{item.repo_http}}"
    dest: "{{item.dir}}"
    accept_hostkey: yes
  with_items:
    - "{{myconfig}}"
    - "{{vundle}}"

- name: use ssh repos
  command: git remote set-url origin "{{item.repo_ssh}}"
  args:
    chdir: "{{item.dir}}"
  with_items:
    - "{{myconfig}}"

- name: make config dirs
  file:
    path: "{{item}}"
    state: directory
  with_items:
  - ~/.calendars
  - ~/.config/keepassx/
  - ~/.config/khal/
  - ~/.config/tilda/
  - ~/.config/tint2/
  - ~/.config/vdirsyncer/
  - ~/.contacts
  - ~/.fluxbox
  - ~/.mutt/
  - ~/.reminder-cal
  - ~/.rtorrent_session/

- name: remove existing user config files
  file:
    path: "{{item.dest}}"
    state: absent
  with_items: "{{linked_files}}"


- name: link user config files
  file:
    src: "{{myconfig.dir}}/{{item.src}}"
    dest: "{{item.dest}}"
    state: link
  with_items: "{{linked_files}}"

- name: install vim plugins
  shell: vim -E -s -c "source ~/.vimrc" -c PluginInstall -c qa

- name: decrypt files
  shell: echo "{{item.data}}" > {{item.path}}
  with_items:
    - { data: "{{ssh_config}}",     path: "~/.ssh/config" }

- name: rm motd
  file:
    path: /etc/motd
    state: absent
  become: yes
  become_method: sudo
