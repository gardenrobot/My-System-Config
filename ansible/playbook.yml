---
- hosts: chromebook2
  vars:
    - ssh_config: "{{ lookup('file', '~/.myconfig/.ssh/config') }}"
    - git_ssh: "git@github.com:samclotf/My-System-Config.git"
    - git_http: "https://github.com/samclotf/My-System-Config.git"
    - config_dest: ~/.myconfig/
  tasks:

  - name: remove folders
    command: "rm ~/{{ item }}"
    with_items:
    - Documents
    - Music
    - Pictures
    - Public
    - Templates
    - Videos
    ignore_errors: yes

  - name: check if ssh keys exist
    stat: path=~/.ssh/id_rsa
    register: ssh_keys_exist

  - name: generate ssh keys
    when: not ssh_keys_exist
    command: ssh-keygen -f ~/.ssh/id_rsa -N ''

  - name: link ssh keys
    command: "{{ item }}"
    with_items:
    - ln -s id_rsa ~/.ssh/id_rsa_personal
    - ln -s id_rsa.pub ~/.ssh/id_rsa_personal.pub
    ignore_errors: yes

  - name: add repos
    apt_repository:
      repo: deb https://riot.im/packages/debian/ xenial main
      state: present
    become: yes
    become_method: sudo

  - name: download repo keys
    get_url:
      url: https://riot.im/packages/debian/repo-key.asc
      dest: /tmp/riot-key.asc

  - name: add repo keys
    command: apt-key add /tmp/riot-key.asc
    become: yes
    become_method: sudo

  - name: upgrade packages
    apt:
      upgrade: dist
      update_cache: yes
    become: yes
    become_method: sudo

  - name: install packages
    apt:
      name: wget,curl,vim,tmux,curl,wget,git,firefox,xbindkeys,xbindkeys-config,tilda,bash-completion,build-essential,cheese,gedit,riot-web,owncloud-client,silversearcher-ag,gimp,traceroute,vlc,htop,ncdu,redshift-gtk,nano,ffmpeg,evince,speedcrunch,links,python-pip,python3-pip,alltray,evolution,keepassx,gpicview,libreoffice,cmus,tint2
      state: latest
    become: yes
    become_method: sudo

  - name: clone system config
    git:
      repo: "{{git_http}}"
      dest: "{{config_dest}}"
      accept_hostkey: yes

  - name: use ssh repo
    command: git remote set-url origin "{{git_ssh}}"
    args:
      chdir: "{{config_dest}}"

  - name: make config dirs
    file:
      path: "{{ item }}"
      state: directory
    with_items:
    - ~/.config/tilda/
    - ~/.config/tint2/

  - name: link user config files
    file:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      state: link
    with_items:
    - { src: '~/.myconfig/tilda_config',  dest: '~/.config/tilda/config_0' }
    - { src: '~/.myconfig/tint2rc',       dest: '~/.config/tint2/tint2rc' }
    - { src: '~/.myconfig/.agignore',     dest: '~/.agignore' }
    - { src: '~/.myconfig/.bash_aliases', dest: '~/.bash_aliases' }
    - { src: '~/.myconfig/.bashrc',       dest: '~/.bashrc' }
    - { src: '~/.myconfig/.gitconfig',    dest: '~/.gitconfig' }
    - { src: '~/.myconfig/.inputrc',      dest: '~/.inputrc' }
    - { src: '~/.myconfig/.ssh-ident',    dest: '~/.ssh-ident' }
    - { src: '~/.myconfig/.tmux.conf',    dest: '~/.tmux.conf' }
    - { src: '~/.myconfig/.vimrc',        dest: '~/.vimrc' }
    - { src: '~/.myconfig/.xbindkeysrc',  dest: '~/.xbindkeysrc' }
    - { src: '~/.myconfig/.xinitrc',      dest: '~/.xinitrc' }

  - name: decrypt ssh config
    shell: echo "{{ ssh_config }}" > ~/.ssh/config

  - name: download discord
    get_url:
      url: https://discordapp.com/api/download/ptb?platform=linux&format=deb
      dest: /tmp/ansible-discord.deb

  - name: install discord
    shell: yes | gdebi /tmp/ansible-discord.deb
    become: yes
    become_method: sudo
