# Things to bring into ansible
#
#
# Add this to session startup automatically
# ~/.myconfig/chromebook/login.sh
#
# add a new email client and its config
#
# find how to edit xfce properties before they initialize
#
# autostart tmux with some common cli programs
#
# Use these themes
# - https://www.xfce-look.org/p/999991/
#   (Breeze-Purple)
# - https://www.xfce-look.org/p/1016679/
#   (axiomd)
# - Icons: Ubuntu-Mono-Dark

---
- hosts: all
  tasks:

  - name: remove folders
    file:
      path: "{{ item }}"
      state: absent
    with_items:
    - Documents
    - Music
    - Pictures
    - Public
    - Templates
    - Videos

  - name: generate ssh keys
    command: ssh-keygen -f "{{item.private}}" -N ''
    args:
      creates: "{{item.private}}"
    with_items:
      - "{{ssh_keys_personal}}"
      - "{{ssh_keys_work}}"

  - name: link ssh keys
    file:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      state: link
    with_items:
    - { src: "{{ssh_keys_personal.private}}", dest: "{{ssh_keys.private}}" }
    - { src: "{{ssh_keys_personal.public}}",  dest: "{{ssh_keys.public}}" }

  - name: add repos
    apt_repository:
      repo: "{{item}}"
      state: present
      #codename: yes # supported in verison 2.3
    with_items:
    - deb https://riot.im/packages/debian/ xenial main
    - deb https://apt.syncthing.net/ syncthing stable
    #- ppa:kasra-mp/ubuntu-indicator-weather # TODO ppas do not work on non-ubuntu with ansible version <2.3
    become: yes
    become_method: sudo

#  - name: download repo keys
#    get_url:
#      url: "{{item.url}}"
#      dest: "{{item.dest}}"
#    with_items: "{{deb_repo_keys}}"
#
#  - name: add repo keys
#    command: apt-key add "{{item.dest}}"
#    become: yes
#    become_method: sudo
#    with_items: "{{deb_repo_keys}}"

  - name: upgrade packages
    apt:
      upgrade: dist
      update_cache: yes
    become: yes
    become_method: sudo

  - name: install packages
    apt:
      name: "{{item}}"
      state: present
    with_items: "{{installed_packages}}"
    become: yes
    become_method: sudo

  - name: remove packages
    apt:
      name: xscreensaver
      state: absent
      autoremove: yes
    become: yes
    become_method: sudo

  - name: clone repos
    git:
      repo: "{{item.repo_http}}"
      dest: "{{item.dir}}"
      accept_hostkey: yes
    with_items:
      - "{{myconfig}}"
      - "{{reddit}}"
      - "{{vundle}}"
      - "{{neomutt}}"

  - name: use ssh repos
    command: git remote set-url origin "{{item.repo_ssh}}"
    args:
      chdir: "{{item.dir}}"
    with_items:
      - "{{myconfig}}"
      - "{{reddit}}"

  - name: make config dirs
    file:
      path: "{{item}}"
      state: directory
    with_items:
    - ~/.calendars
    - ~/.config/khal/
    - ~/.config/keepassx/
    - ~/.config/tilda/
    - ~/.config/tint2/
    - ~/.config/vdirsyncer/
    - ~/.contacts
    - ~/.fluxbox
    - ~/.mutt/
    - ~/.rtorrent_session/

  - name: get list of config files to delete
    stat:
      path: "{{item.dest}}"
    register: st
    with_items: "{{linked_files}}"

  - name: remove existing user config files
    file:
      path: "{{item.stat.path}}"
      state: absent
    when: item.stat.exists and item.stat.isreg == True
    with_items: "{{st.results}}"


  - name: link user config files
    file:
      src: "{{myconfig.dir}}/{{item.src}}"
      dest: "{{item.dest}}"
      state: link
    with_items: "{{linked_files}}"

  - name: download deb files
    get_url:
      url:  "{{item.url}}"
      dest: "{{item.dest}}"
    with_items: "{{deb_installs}}"

  - name: install deb files
    shell: yes | gdebi "{{item.dest}}"
    become: yes
    become_method: sudo
    args:
      creates: "{{item.bin_path}}"
    with_items: "{{deb_installs}}"

  - name: install vim plugins
    shell: vim -E -s -c "source ~/.vimrc" -c PluginInstall -c qa

  - name: download password file
    get_url:
      url: https://nc3.jaba.hosting/s/Fow9dWpKt6Wnw5P/download
      dest: ~/.old.kdbx

  - name: install pip packages
    pip:
      name: "{{item}}"
      executable: pip3
    with_items:
      - khal
      - tootstream
      - vdirsyncer

  - name: decrypt files
    shell: echo "{{item.data}}" > {{item.path}}
    with_items:
      - { data: "{{ssh_config}}",     path: "~/.ssh/config" }

  - name: generate locales
    command: "{{item}}"
    become: yes
    become_method: sudo
    with_items:
      - "locale-gen"
      - "update-locale"

  - name: configure neomutt
    command: './configure --disable-doc --notmuch --sasl'
    args:
      chdir: "{{neomutt.dir}}"

  - name: make neomutt
    make:
      chdir: "{{neomutt.dir}}"

  - name: make install neomutt
    make:
      chdir: "{{neomutt.dir}}"
      target: install
    become: yes
    become_method: sudo

  - name: update font cache
  - command: fc-cache -f


- hosts: crouton
  tasks:

  - name: cp reddit config
    command: cp "{{myconfig.dir}}/reddit_config" "{{reddit.dir}}/config"

  - name: install pip requirements
    pip:
      requirements: "{{reddit.dir}}/requirements.txt"

  - name: update config
    command: python reddit-search-notifications.py -r
    args:
      chdir: "{{reddit.dir}}"

  - name: titlebar buttons
    shell: DISPLAY=:1.0 xfconf-query -c xfwm4 -p /general/button_layout -s 'CHM|O'
    ignore_errors: yes

  - name: power settings
    command: "{{item}}"
    with_items:
    - DISPLAY=:1.0 xfconf-query -c xfce4-power-manager -p /xfce4-power-manager/lid-action-on-battery -s 0
    - DISPLAY=:1.0 xfconf-query -c xfce4-power-manager -p /xfce4-power-manager/lid-action-on-ac -s 0
    - DISPLAY=:1.0 xfconf-query -c xfce4-power-manager -p /xfce4-power-manager/show-tray-icon -s 1
    ignore_errors: yes # This fails if the xfce4-power-manager settings menu has not been opened yet. Fix later.

  - name: set wallpaper
    shell: DISPLAY=:1.0 xfconf-query --channel xfce4-desktop --property /backdrop/screen0/monitor0/image-path --set ~/Syncthing/Wallpaper/shards-pink.jpg
    ignore_errors: yes # This fails if the wallpaper settings menu has not been opened yet. Fix later.

  - name: update rc.local
    copy:
      src: "{{myconfig.dir}}/chromebook/rc.local"
      dest: /etc/rc.local
      owner: root
      group: root
      mode: u=rwx,g=rx,o=rx
    become: yes
    become_method: sudo
