---
- hosts: chromebook2
  vars:
    myconfig:
      dir:        ~/.myconfig
      repo_http:  https://github.com/samclotf/My-System-Config.git
      repo_ssh:   git@github.com:samclotf/My-System-Config.git

    reddit:
      dir:        ~/.reddit-search-notifications
      repo_http:  https://github.com/samclotf/reddit-search-notifications.git
      repo_ssh:   git@github.com:samclotf/reddit-search-notifications.git

    vundle:
      dir:        ~/.vim/bundle/Vundle.vim
      repo_http:  https://github.com/VundleVim/Vundle.vim.git

    ssh_keys:
      private:  ~/.ssh/id_rsa
      public:   ~/.ssh/id_rsa.pub

    ssh_keys_personal:
      private:  ~/.ssh/id_rsa_personal
      public:   ~/.ssh/id_rsa_personal.pub

    ssh_keys_work:
      private:  ~/.ssh/id_rsa_work
      public:   ~/.ssh/id_rsa_work.pub

    ssh_config: "{{ lookup('file', '{{myconfig.dir}}/ssh/config.vault') }}"
    owncloud_pass: "{{ lookup('file', '{{myconfig.dir}}/owncloud/password.vault') }}"

  tasks:

  - name: remove folders
    file:
      path: "{{ item }}"
      state: absent
    with_items:
    - Documents
    - Music
    - Pictures
    - Public
    - Templates
    - Videos

  - name: generate ssh keys
    command: ssh-keygen -f "{{item.private}}" -N ''
    args:
      creates: "{{item.private}}"
    with_items:
      - "{{ssh_keys_personal}}"
      - "{{ssh_keys_work}}"

  - name: link ssh keys
    file:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      state: link
    with_items:
    - { src: "{{ssh_keys_personal.private}}", dest: "{{ssh_keys.private}}" }
    - { src: "{{ssh_keys_personal.public}}",  dest: "{{ssh_keys.public}}" }

  - name: add repos
    apt_repository:
      repo: "{{item}}"
      state: present
    with_items:
    - deb https://riot.im/packages/debian/ xenial main
    - ppa:kasra-mp/ubuntu-indicator-weather
    become: yes
    become_method: sudo

  - name: download repo keys
    get_url:
      url: https://riot.im/packages/debian/repo-key.asc
      dest: /tmp/riot-key.asc

  - name: add repo keys
    command: apt-key add /tmp/riot-key.asc
    become: yes
    become_method: sudo

  - name: upgrade packages
    apt:
      upgrade: dist
      update_cache: yes
    become: yes
    become_method: sudo

  - name: install packages
    apt:
      name: "{{item}}"
      state: present
    with_items:
    - alltray
    - bash-completion
    - build-essential
    - cheese
    - cmus
    - curl
    - curl
    - evince
    - ffmpeg
    - firefox
    - gedit
    - gimp
    - git
    - gpicview
    - htop
    - indicator-weather
    - keepassx
    - libreoffice
    - links
    - nano
    - ncdu
    - owncloud-client
    - owncloud-client-cmd
    - python-pip
    - python3-pip
    - redshift-gtk
    - riot-web
    - silversearcher-ag
    - software-properties-common
    - speedcrunch
    - tilda
    - tint2
    - tmux
    - traceroute
    - ttf-ancient-fonts-symbola
    - vim
    - vlc
    - wget
    - xbindkeys
    - xbindkeys-config
    - xsel
    become: yes
    become_method: sudo

  - name: remove packages
    apt:
      name: xscreensaver
      state: absent
      autoremove: yes
    become: yes
    become_method: sudo

  - name: clone repos
    git:
      repo: "{{item.repo_http}}"
      dest: "{{item.dir}}"
      accept_hostkey: yes
    with_items:
      - "{{myconfig}}"
      - "{{reddit}}"
      - "{{vundle}}"

  - name: use ssh repos
    command: git remote set-url origin "{{item.repo_ssh}}"
    args:
      chdir: "{{item.dir}}"
    with_items:
      - "{{myconfig}}"
      - "{{reddit}}"

  - name: cp reddit config
    command: cp "{{myconfig.dir}}/reddit_config" ~/.reddit-search-notifications/config

  - name: install pip requirements
    pip:
      requirements: ~/.reddit-search-notifications/requirements.txt

  - name: make config dirs
    file:
      path: "{{ item }}"
      state: directory
    with_items:
    - ~/.config/tilda/
    - ~/.config/tint2/
    - ~/.config/keepassx2/
    - ~/.fluxbox

  # TODO only remove if they are files
  - name: remove existing user config files
    file:
      path: "{{ item }}"
      state: absent
    with_items: # TODO make these variables less redundant
    - ~/.bashrc
    - ~/.config/lxpanel/LXDE/panels/panel
    - ~/.config/tilda/config_0


  - name: link user config files
    file:
      src: "{{myconfig.dir}}/{{item.src}}"
      dest: "{{item.dest}}"
      state: link
    with_items:
    - { src: "agignore",        dest: "~/.agignore" }
    - { src: "bash_aliases",    dest: "~/.bash_aliases" }
    - { src: "bashrc",          dest: "~/.bashrc" }
    - { src: "gitconfig",       dest: "~/.gitconfig" }
    - { src: "inputrc",         dest: "~/.inputrc" }
    - { src: "fluxbox/init",    dest: "~/.fluxbox/init" }
    - { src: "fluxbox/startup", dest: "~/.fluxbox/startup" }
    - { src: "keepassx2.ini",   dest: "~/.config/keepassx2/keepassx2.ini" }
    - { src: "ssh-ident",       dest: "~/.ssh-ident" }
    - { src: "tilda_config",    dest: "~/.config/tilda/config_0" }
    - { src: "tint2rc",         dest: "~/.config/tint2/tint2rc" }
    - { src: "tmux.conf",       dest: "~/.tmux.conf" }
    - { src: "vimrc",           dest: "~/.vimrc" }
    - { src: "xbindkeysrc",     dest: "~/.xbindkeysrc" }
    - { src: "xinitrc",         dest: "~/.xinitrc" }

  - name: decrypt ssh config
    shell: echo "{{ ssh_config }}" > ~/.ssh/config
    args:
      creates: ~/.ssh/config

  # TODO combine .deb installation tasks
  - name: download discord
    get_url:
      url: https://discordapp.com/api/download/ptb?platform=linux&format=deb
      dest: /tmp/ansible-discord.deb

  - name: install discord
    shell: yes | gdebi /tmp/ansible-discord.deb
    become: yes
    become_method: sudo
    args:
      creates: /usr/bin/discord-ptb

  # This version may be out of date. When the repo is released, use that.
  - name: download bridge
    get_url:
      url: https://protonmail.com/download/protonmail-bridge_1.0.2-1_amd64.deb
      dest: /tmp/ansible-bridge.deb

  - name: install bridge
    shell: yes | gdebi /tmp/ansible-bridge.deb
    become: yes
    become_method: sudo
    args:
      creates: /usr/bin/Desktop-Bridge

  - name: install vim plugins
    shell: vim -E -s -c "source ~/.vimrc" -c PluginInstall -c qa

  - name: download password file
    get_url:
      url: https://nc3.jaba.hosting/s/Fow9dWpKt6Wnw5P/download
      dest: ~/.old.kdbx

  - name: install tootstream
    pip:
      name: tootstream
      executable: pip3

  - name: make owncloud dir
    file:
      path: ~/ownCloud/
      state: directory

  - name: owncloud cron
    cron:
      name: "owncloud sync"
      minute: "*/10"
      job: "{{myconfig.dir}}/owncloud/sync.sh"

  - name: restrict owncloud password
    file:
      path: "{{myconfig.dir}}/owncloud/password"
      state: touch
      owner: sam
      mode: "u=rw,g=,o="

  - name: decrypt owncloud password
    shell: echo "{{owncloud_pass}}" > {{myconfig.dir}}/owncloud/password

  - name: start cron
    service:
      name: cron
      state: started
      enabled: yes

  - name: titlebar buttons
    shell: DISPLAY=:1.0 xfconf-query -c xfwm4 -p /general/button_layout -s 'CHM|O'
    ignore_errors: yes

  - name: power settings
    command: "{{item}}"
    with_items:
    - DISPLAY=:1.0 xfconf-query -c xfce4-power-manager -p /xfce4-power-manager/lid-action-on-battery -s 0
    - DISPLAY=:1.0 xfconf-query -c xfce4-power-manager -p /xfce4-power-manager/lid-action-on-ac -s 0
    - DISPLAY=:1.0 xfconf-query -c xfce4-power-manager -p /xfce4-power-manager/show-tray-icon -s 1
    ignore_errors: yes # This fails if the xfce4-power-manager settings menu has not been opened yet. Fix later.

  - name: set wallpaper
    shell: DISPLAY=:1.0 xfconf-query --channel xfce4-desktop --property /backdrop/screen0/monitor0/image-path --set ~/ownCloud/Wallpaper/shards-pink.jpg
    ignore_errors: yes # This fails if the wallpaper settings menu has not been opened yet. Fix later.

  - name: update rc.local
    copy:
      src: "{{myconfig.dir}}/chromebook/rc.local"
      dest: /etc/rc.local
      owner: root
      group: root
      mode: u=rwx,g=rx,o=rx
    become: yes
    become_method: sudo
