" Plugin manager. If Vundle is not installed, run this command:
" git clone --depth 1 https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim && vi +VundleInstall +qa
set nocompatible
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'bronson/vim-trailing-whitespace'
Plugin 'junegunn/vim-easy-align'
Plugin 'will133/vim-dirdiff'
Plugin 'kien/rainbow_parentheses.vim'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
"Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
"Plugin 'ciaranm/detectindent'
Plugin 'georgewitteman/vim-fish'
call vundle#end()

" Run bash aliases from inside vim. Run this command to get this to work.
" echo -e "shopt -s expand_aliases\nsource ~/.bash_aliases" > ~/.vimrc_bash
let $BASH_ENV = "~/.vimrc_bash"

" Color Scheme
colorscheme desert

" Enable syntax highlighting
syntax on

" Enable Rainbox Parantheses
au VimEnter * RainbowParenthesesToggle

" In visual mode, press enter to EasyAlign the selection
vnoremap <silent> <Enter> :EasyAlign<cr>

" Bash-like Tab Indent
set wildmode=longest,list,full
set wildmenu

" Enable filetype detection
filetype on

" Enable line numbers on left
set number

" Always show tabline
set showtabline=3

" Enable status line on bottom
set laststatus=2

" Keep 4 lines above/below cursor
set scrolloff=4

" Enable colors on airline
set t_Co=256

" Highlight search matches
set hlsearch

" DirDiff
let g:DirDiffExcludes = ".*.swp,.git"

" Increase max number of tabs
set tabpagemax=200

" Press # to count occurences of current search
nnoremap # :%s/<c-r>///gn<ESC>

" Press Ctrl-s in normal mode to save
nnoremap <c-s> :wa<CR>

" Ctrl-l redraws the screen and removes any search highlighting.
nnoremap <silent> <C-l> :nohl<CR><C-l>

" bindings for navigating tabs
nnoremap T :tabnew<CR>
nnoremap J :tabprevious<CR>
nnoremap K :tabnext<CR>
nnoremap <silent> H :execute 'silent! tabmove ' . (tabpagenr()-2)<CR>
nnoremap <silent> L :execute 'silent! tabmove ' . (tabpagenr()+1)<CR>

" Ctrl-p enters paste mode. Ctrl-o exits it.
nnoremap <C-P> :set paste<CR>:set nonumber<CR>:GitGutterDisable<CR>
nnoremap <C-O> :set nopaste<CR>:set number<CR>:GitGutterEnable<CR>
inoremap <C-P> <Esc>:set paste<CR>:set nonumber<CR>:GitGutterDisable<CR>a
inoremap <C-O> <Esc>:set nopaste<CR>:set number<CR>:GitGutterEnable<CR>a

" In visual mode, keep selection selected after indenting/unindenting.
vnoremap > ><CR>gvh
vnoremap < <<CR>gvh

" + increments a number. - decrements it.
nnoremap + <C-a>
nnoremap - <C-x>

" In insert mode, press jj to exit
:imap jj <Esc>

" TODO when searching and press :, create a s/// with the current selection as the thing to replace. Put the cursor place to type the replacement.

" TODO keybindings to comment/uncomment. Filetype specific.

" TODO autocomplete pairs ()[] on certain files

" TODO when typing on the bottom, ctrl-arrowkey moves to next word

" In visual mode, * will put the current selection in a search
" TODO make it so the search does not advance to the next match
":let @/='foobar'
vnoremap <silent> * :<C-U>
  \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
  \gvy/<C-R><C-R>=substitute(
  \escape(@", '/\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
  \gV:call setreg('"', old_reg, old_regtype)<CR>

function! s:get_visual_selection()
    let [line_start, column_start] = getpos("'<")[1:2]
    let [line_end, column_end] = getpos("'>")[1:2]
    let lines = getline(line_start, line_end)
    if len(lines) == 0
        return ''
    endif
    let lines[-1] = lines[-1][: column_end - 2]
    let lines[0] = lines[0][column_start - 1:]
    return join(lines, "\n")
endfunction

" Display tabs as 4 spaces.
set tabstop=4
set softtabstop=4

" Make tab characters visible
set list
set listchars=tab:â–¸\ 

" Shifting one indent will shift by 4 spaces.
set shiftwidth=4

" Pressing tab key creates 4 spaces.
set expandtab

" Pressing backspace deletes 4 spaces.
set backspace=2

" Indent when pressing enter. Pretty dumb.
set cindent

" These prevent an issue in python files where typing # removes the current indent.
set cinkeys-=0#
set indentkeys-=0#

" Use 2-spaces for yaml and cfg
autocmd FileType yaml setlocal shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType yaml setlocal expandtab
autocmd FileType cfg  setlocal shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType cfg  setlocal expandtab
autocmd FileType ruby setlocal shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType ruby setlocal expandtab
autocmd FileType html setlocal shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType html setlocal expandtab
